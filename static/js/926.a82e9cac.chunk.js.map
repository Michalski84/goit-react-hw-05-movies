{"version":3,"file":"static/js/926.a82e9cac.chunk.js","mappings":"sPA2CA,EAvCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAkBpB,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,MAAM,GAADC,OALjB,+BAK6B,WAAAA,OAAUpB,EAAO,qBAAAoB,OAN/C,qCAM8E,KAAD,EAAzE,OAARN,EAAQE,EAAAK,KAAAL,EAAAE,KAAA,EACKJ,EAASQ,OAAO,KAAD,EAA5BP,EAAIC,EAAAK,KACVd,EAAQQ,EAAKT,MAAMU,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEnBQ,QAAQC,MAAM,uBAAsBT,EAAAO,IAAS,yBAAAP,EAAAU,OAAA,GAAAb,EAAA,mBAEhD,kBARc,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KASfnB,GACF,GAAG,CAACT,KAGF6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,QAAOC,SAAC,UACtBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SACjBzB,EAAK2B,KAAI,SAACC,GAAK,OACdL,EAAAA,EAAAA,MAAA,MAAmBC,UAAU,OAAMC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OACEG,IAAG,uDAAAf,OAAyDc,EAAME,cAClEC,IAAKH,EAAMI,KACXR,UAAU,WAEZE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,OAAMC,SAAEG,EAAMI,SANpBJ,EAAMK,GAOV,QAKf,C,sBCzCA,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOxB,GAEP,YADAkB,EAAOlB,EAET,CAEIuB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASlC,EAAkB0C,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAO5B,UACX,OAAO,IAAIuB,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAG1B,MAAM2B,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOY,GACdjB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASY,EACnE,CAEAb,OAAMc,EACR,GACF,CACF,C","sources":["components/Cast.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Cast.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  const API_KEY = '537fc94f598907b51d72f500bcb07467';\n  const BASE_URL = 'https://api.themoviedb.org/3';\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n        const data = await response.json();\n        setCast(data.cast);\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div className=\"cast-container\">\n      <h3 className=\"title\">Cast</h3>\n      <ul className=\"list\">\n        {cast.map((actor) => (\n          <li key={actor.id} className=\"item\">\n            <img\n              src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${actor.profile_path}`}\n              alt={actor.name}\n              className=\"image\"\n            />\n            <p className=\"name\">{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","json","t0","console","error","stop","apply","arguments","_jsxs","className","children","_jsx","map","actor","src","profile_path","alt","name","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}